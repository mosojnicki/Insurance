@model OsigDrustvo.Models.Partner

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add new partner</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <form>
            <div class="row">
                <div class="col-md-4 "></div>
                <div class="col-md-4">
                    <h4 class="p-2">Add new partner</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PartnerNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PartnerNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PartnerNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CroatianPin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CroatianPin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CroatianPin, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PartnerTypeId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.PartnerTypeId, new List<SelectListItem>
                            {
                                new SelectListItem{Text="1 - Personal", Value="1"},
                                new SelectListItem{Text="2 - Legal", Value="2", },
                            }, "--Select--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PartnerTypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CreateByUser, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CreateByUser, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreateByUser, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsForeign, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsForeign)
                            @Html.ValidationMessageFor(model => model.IsForeign, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExternalCode, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ExternalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExternalCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                <button type="reset" class="btn btn-danger btn-block">Cancel</button>
                            </div>
                            <div class="col-6">
                                <button type="submit" class="btn btn-success btn-block">Save</button>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-4"></div>
            </div>
        </form>
    }
</body>
</html>
